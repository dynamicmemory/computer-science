plot(discoveries)
discoveries = plot(discoveries)
plot(discoveries)
plot(discoveries)
plot(discoveries, col = "m", lwd = 3)
plot(discoveries, col = "cyan", lwd = 3)
plot(co2)
# Built in data set of co2 amount over years
plot(co2, xlab="Years", ylab="CO2 Concentration (ppm)", title="Climate change fraud")
# Built in data set of co2 amount over years
plot(co2, xlab="Years", ylab="CO2 Concentration (ppm)", grid=TRUE)
# Built in data set of co2 amount over years
plot(co2, xlab="Years", ylab="CO2 Concentration (ppm)", line(x, y))
# Built in data set of co2 amount over years
plot(co2, xlab="Years", ylab="CO2 Concentration (ppm)")
smoothScatter(co2, xlab = "Years", ylab = "Co2 concentration (ppm)")
iris
boxplot(Sepal.Width~Species, data=iris)
# show the sepal widths of the iris data by sorting by species
# Response variable before the tilda and explanatory after the tilda
boxplot(Sepal.Width~Species, col = "forest_green", data=iris)
# show the sepal widths of the iris data by sorting by species
# Response variable before the tilda and explanatory after the tilda
boxplot(Sepal.Width~Species, col = "red", data=iris)
# show the sepal widths of the iris data by sorting by species
# Response variable before the tilda and explanatory after the tilda
boxplot(Sepal.Width~Species, col = "red", xlab = "Species of Iris",
ylab = "Septal Width (cm)", data=iris)
email50 <- read.csv("workshop-datasets/email50.csv", header = TRUE)
head(email50)
tail(email50)
dim(email50)
names(email50)
summary(email50)
loan50 <- read.csv("./workshop-datasets/loan50.csv")
plot(loan50)
dotplot(loan50)(loan50)
dot(loan50)(loan50)
dot(loan50)
dotchart(loan50)
dotchart(loan50$interest_rate)
# stacked dot plot
stripchart(interest_rate, method = "stack")
interest_rate <- loan50$interest_rate
# stacked dot plot
stripchart(interest_rate, method = "stack")
# stacked dot plot
stripchart(interest_rate, method = "stack", at = 0)
# stacked dot plot
stripchart(interest_rate, method = "stack", at = 0, pch = 16)
# stacked dot plot
stripchart(interest_rate, method = "stack", at = 0, pch = 16,
main = "Stacked dot", xlab="Interest Rate", ylab = "Number of loans")
mean <- 0
for (i in colnames(loan50$interest_rate))
i += i
mean(interest_rate)
mean <- 0
for (i in colnames(loan50$interest_rate))
eval.parent(substitute(i <- i + i))
counter <- 0
mean(interest_rate)
average <- mean / counter
mean <- 0
counter <- 0
for (i in colnames(loan50$interest_rate))
eval.parent(substitute(mean <- mean + i))
eval.parent(substitute(counter <- counter + 1))
average <- mean / counter
mean(interest_rate)
histogram()
hist(interest_rate)
hist(interest_rate, col="darkmagenta")
hist(interest_rate, col="darkmagenta", xlab = "Interest Rate")
hist(interest_rate, col="darkmagenta", xlab = "Interest Rate", labels=h$counts)
hist(interest_rate, col="darkmagenta", xlab = "Interest Rate", labels=interest_rate$counts)
hist(interest_rate, col="darkmagenta", xlab = "Interest Rate",
labels=interest_rate.counts)
hist(interest_rate, col="darkmagenta", xlab = "Interest Rate",
bins = 10)
hist(interest_rate, col="darkmagenta", xlab = "Interest Rate",
breaks = 10)
loans <- read.csv("./workshop-datasets/loans.csv")
table()
table(loans$homeownership)
count <- c(4, 3, 7, 3, 4)
mean(count)
[1]
mean(count)
var(count)
sd(count)
summary(count)
email <- read.csv('./work-datasets/email50.csv')
email <- read.csv('work-datasets/email50.csv')
email <- read.csv('work-datasets/email50.csv')
email <- read.csv('/work-datasets/email50.csv')
email <- read.csv('./work-datasets/email50.csv')
email <- read.csv('./workshop-datasets/email50.csv')
View(email)
View(email)
View(email50)
View(email)
head(email)
dim(email)
names(email)
attach(email)
attach(email)
attach(email)
head
head()
attach(email)
deattach(email)
attach(email)
plot(line_breaks ~ num_char)
plot(line_breaks~num_char, xlab='Number of Characters', ylab='Number of Lines',
pch=21, cex=2, lwd=1.5, col='deepskyblue3', bg='lightblue')
detach(email)
detach(email)
detach(email)
detach(email)
detach(email)
search()
attach(email)
search()
# calc the mean
mean(num_char)
# Create a histogram
hist(num_char
# Create a histogram
hist(num_char)
# Create a histogram
hist(num_char)
# Create a histogram
hist(num_char, breaks=10)
# Create a histogram
hist(num_char, breaks=100)
# Create a histogram
hist(num_char, breaks=20)
# Create a histogram
hist(num_char, col='green', breaks=20)
# Create a histogram
hist(num_char, xlab='Number of Characters', ylab='Frequency', col='green', breaks=20)
# Create a histogram
hist(num_char, xlab='Number of Characters', ylab='Frequency', col='green',
breaks=3)
# Create a histogram
hist(num_char, xlab='Number of Characters', ylab='Frequency', col='green',
breaks=50)
iris
# Calculate the variance and standard deviation of the iris sepal widths
var(iris$Sepal.Width)
sd(iris$Sepal.Width)
# Boxplot of the number of characters column
boxplot(num_char, ylab='Number of Characters')
# Get a summary analysis of our dataset
summary(email)
# Get a summary analysis of our dataset
summary(num_char)
# calc counts (categorical variables)
table(spam)
# Get a summary analysis of our dataset
summary(num_char)
# barplot of specific categorical data
size_of_num <- table(number)
total_number_num <- sum(size_of_num)
barplot(size_of_num / total_number_num), xlab='Number', ylab='Count',
barplot(size_of_num / total_number_num), xlab='Number', ylab='Count',
barplot(size_of_num / total_number_num), xlab='Number', ylab='Count',
barplot(size_of_num / total_number_num), xlab='Number', ylab='Count', col='darkorchid')
barplot(size_of_num, xlab='Number', ylab='Count', col='darkorchid')
# Same as above but now calculated as percentage or portion
barplot((size_of_num / total_number_num))
# Mosaic plot of the data
mosaicplot(size_of_num, xlab='', main='', color = c('darkgreen', 'deepskyblue3',
'orangered'))
mosaicplot(table(spam, number), xlab='', main='', color = c('darkgreen', 'deepskyblue3',
'orangered'))
balance <- read.csv('./workshop-datasets/balance.csv')
deatach(email)
attach(balance)
boxplot(Balance~School_Year)
boxplot(Balance~School_Year, col=c('salmon', 'cadetblue'), ylab= 'Balancing time(s)',
xlab = 'School year level')
plot(Balance~School_Year)
boxplot(School_Year~balance, col=c('salmon', 'cadetblue'), ylab= 'Balancing time(s)',
xlab = 'School year level')
plot(School_Year~balance`)
plot(School_Year~balance)
plot(Balance~School_Year)
